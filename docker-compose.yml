services:
  web-orx:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: apache
    ports:
      - "80:80"
    extra_hosts:
      # For Linux devs: make host.docker.internal work
      - "host.docker.internal:host-gateway"
      # Make these hostnames resolve *inside* the container for healthcheck
      - "web-templates.test:127.0.0.1"
      # - "web-templates:127.0.0.1"
      - "mystorepanel.test:127.0.0.1"
      # - "mystorepanel:127.0.0.1"
      - "template1.test:127.0.0.1"
      - "template2.test:127.0.0.1"
      - "template3.test:127.0.0.1"
      - "template4.test:127.0.0.1"
      - "template5.test:127.0.0.1"
      - "template6.test:127.0.0.1"
      - "template7.test:127.0.0.1"
      - "template8.test:127.0.0.1"
    volumes:
      # mystorepanel (ro + rw folders)
      - ../mystorepanel:/var/www/mystorepanel
      # web-templates (ro + rw folders)
      - ../web-templates:/var/www/web-templates
      # templates extra...
      - ../template1:/var/www/template1

      - ../template2:/var/www/template2

      - ../template3:/var/www/template3

      - ../template4:/var/www/template4

      - ../template5:/var/www/template5

      - ../template6:/var/www/template6

      - ../template7:/var/www/template7

      - ../template8:/var/www/template8

      # Apache & Xdebug configurations
      - ./apache/vhosts.conf:/etc/apache2/sites-enabled/000-vhosts.conf
      - ./php/xdebug.ini:/usr/local/etc/php/conf.d/99-xdebug.ini

    environment:
      APACHE_RUN_USER: www-data
      APACHE_RUN_GROUP: www-data
      XDEBUG_LOG_LEVEL: "${XDEBUG_LOG_LEVEL:-3}"  # Default to 3 if not set in .env
      XDEBUG_MODE: "debug,develop,coverage"
      SLACK_PHPUNIT_NOTIFY_WEBHOOK_URL: "${SLACK_PHPUNIT_NOTIFY_WEBHOOK_URL}"
      TEST_RUN_USER: "${TEST_RUN_USER:-www-data}"  # Default to www-data if not set in .env

    # Optional: small healthcheck
    # Check if all templates and mystorepanel are reachable
    healthcheck:
      test: >
        bash -c '
          curl -fsS http://localhost/ || exit 1;
          curl -fsS http://mystorepanel.test/ || exit 1;
          curl -fsS http://web-templates.test/ || exit 1;
          curl -fsS http://template1.test/ || exit 1;
          curl -fsS http://template2.test/ || exit 1;
          curl -fsS http://template3.test/ || exit 1;
          curl -fsS http://template4.test/ || exit 1;
          curl -fsS http://template5.test/ || exit 1;
          curl -fsS http://template6.test/ || exit 1;
          curl -fsS http://template7.test/ || exit 1;
          curl -fsS http://template8.test/ || exit 1;
        '
      interval: 2m
      timeout: 10s
      retries: 3

    networks:
      - msp_net
    depends_on:
      mysql_test:
        condition: service_healthy

    restart: unless-stopped

  mysql_test:
    image: mysql:8.0
    container_name: mysql_msp_test
    restart: unless-stopped
    ports:
      - "3306:3306"   # host:container
    environment:
      MYSQL_DATABASE: mystorepanel_test
      MYSQL_USER: msp_test
      MYSQL_PASSWORD: msp_test
      MYSQL_ROOT_PASSWORD: Root_pass
    command: [
      "--default-authentication-plugin=mysql_native_password",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci",
      "--sql-mode=",
      "--innodb_flush_log_at_trx_commit=2"
    ]
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost -u root -pRoot_pass || exit 1" ]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - mysql_msp_test_data:/var/lib/mysql
    networks:
      - msp_net

  phpmyadmin:
    image: phpmyadmin:5
    container_name: pma-msp
    restart: unless-stopped
    depends_on:
      - mysql_test
    environment:
      PMA_HOST: mysql_test
      PMA_USER: root
      PMA_PASSWORD: Root_pass
    ports:
      - "8082:80"
    networks:
      - msp_net

networks:
  msp_net:
    driver: bridge

volumes:
  mysql_msp_test_data:
